//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class GMRES : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal GMRES(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(GMRES obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~GMRES() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          NQuantLibcPINVOKE.delete_GMRES(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public QlArray solve(QlArray b, QlArray x0) {
    QlArray ret = new QlArray(NQuantLibcPINVOKE.GMRES_solve__SWIG_0(swigCPtr, QlArray.getCPtr(b), QlArray.getCPtr(x0)), true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public QlArray solve(QlArray b) {
    QlArray ret = new QlArray(NQuantLibcPINVOKE.GMRES_solve__SWIG_1(swigCPtr, QlArray.getCPtr(b)), true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public QlArray solveWithRestart(uint restart, QlArray b, QlArray x0) {
    QlArray ret = new QlArray(NQuantLibcPINVOKE.GMRES_solveWithRestart__SWIG_0(swigCPtr, restart, QlArray.getCPtr(b), QlArray.getCPtr(x0)), true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public QlArray solveWithRestart(uint restart, QlArray b) {
    QlArray ret = new QlArray(NQuantLibcPINVOKE.GMRES_solveWithRestart__SWIG_1(swigCPtr, restart, QlArray.getCPtr(b)), true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GMRES(MatrixMultiplicationDelegate delegate_, uint maxIter, double relTol) : this(NQuantLibcPINVOKE.new_GMRES__SWIG_0(MatrixMultiplicationDelegate.getCPtr(delegate_), maxIter, relTol), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public GMRES(MatrixMultiplicationDelegate delegate_, uint maxIter, double relTol, SWIGTYPE_p_MatrixMultiplicationProxy preconditioner) : this(NQuantLibcPINVOKE.new_GMRES__SWIG_1(MatrixMultiplicationDelegate.getCPtr(delegate_), maxIter, relTol, SWIGTYPE_p_MatrixMultiplicationProxy.getCPtr(preconditioner)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

}
