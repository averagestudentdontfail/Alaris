//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IsdaCdsEngine : PricingEngine {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal IsdaCdsEngine(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.IsdaCdsEngine_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IsdaCdsEngine obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_IsdaCdsEngine(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public IsdaCdsEngine(DefaultProbabilityTermStructureHandle probability, double recoveryRate, YieldTermStructureHandle discountCurve, bool includeSettlementDateFlows, IsdaCdsEngine.NumericalFix numericalFix, IsdaCdsEngine.AccrualBias accrualBias, IsdaCdsEngine.ForwardsInCouponPeriod forwardsInCouponPeriod) : this(NQuantLibcPINVOKE.new_IsdaCdsEngine__SWIG_0(DefaultProbabilityTermStructureHandle.getCPtr(probability), recoveryRate, YieldTermStructureHandle.getCPtr(discountCurve), includeSettlementDateFlows, (int)numericalFix, (int)accrualBias, (int)forwardsInCouponPeriod), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public IsdaCdsEngine(DefaultProbabilityTermStructureHandle probability, double recoveryRate, YieldTermStructureHandle discountCurve, bool includeSettlementDateFlows, IsdaCdsEngine.NumericalFix numericalFix, IsdaCdsEngine.AccrualBias accrualBias) : this(NQuantLibcPINVOKE.new_IsdaCdsEngine__SWIG_1(DefaultProbabilityTermStructureHandle.getCPtr(probability), recoveryRate, YieldTermStructureHandle.getCPtr(discountCurve), includeSettlementDateFlows, (int)numericalFix, (int)accrualBias), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public IsdaCdsEngine(DefaultProbabilityTermStructureHandle probability, double recoveryRate, YieldTermStructureHandle discountCurve, bool includeSettlementDateFlows, IsdaCdsEngine.NumericalFix numericalFix) : this(NQuantLibcPINVOKE.new_IsdaCdsEngine__SWIG_2(DefaultProbabilityTermStructureHandle.getCPtr(probability), recoveryRate, YieldTermStructureHandle.getCPtr(discountCurve), includeSettlementDateFlows, (int)numericalFix), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public IsdaCdsEngine(DefaultProbabilityTermStructureHandle probability, double recoveryRate, YieldTermStructureHandle discountCurve, bool includeSettlementDateFlows) : this(NQuantLibcPINVOKE.new_IsdaCdsEngine__SWIG_3(DefaultProbabilityTermStructureHandle.getCPtr(probability), recoveryRate, YieldTermStructureHandle.getCPtr(discountCurve), includeSettlementDateFlows), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public IsdaCdsEngine(DefaultProbabilityTermStructureHandle probability, double recoveryRate, YieldTermStructureHandle discountCurve) : this(NQuantLibcPINVOKE.new_IsdaCdsEngine__SWIG_4(DefaultProbabilityTermStructureHandle.getCPtr(probability), recoveryRate, YieldTermStructureHandle.getCPtr(discountCurve)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public enum NumericalFix {
    None,
    Taylor
  }

  public enum AccrualBias {
    HalfDayBias,
    NoBias
  }

  public enum ForwardsInCouponPeriod {
    Flat,
    Piecewise
  }

}
