//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FdOrnsteinUhlenbeckVanillaEngine : PricingEngine {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal FdOrnsteinUhlenbeckVanillaEngine(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.FdOrnsteinUhlenbeckVanillaEngine_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FdOrnsteinUhlenbeckVanillaEngine obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_FdOrnsteinUhlenbeckVanillaEngine(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, uint tGrid, uint xGrid, uint dampingSteps, double epsilon, FdmSchemeDesc schemeDesc) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_0(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), tGrid, xGrid, dampingSteps, epsilon, FdmSchemeDesc.getCPtr(schemeDesc)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, uint tGrid, uint xGrid, uint dampingSteps, double epsilon) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_1(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), tGrid, xGrid, dampingSteps, epsilon), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, uint tGrid, uint xGrid, uint dampingSteps) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_2(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), tGrid, xGrid, dampingSteps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, uint tGrid, uint xGrid) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_3(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), tGrid, xGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, uint tGrid) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_4(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), tGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_5(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends, uint tGrid, uint xGrid, uint dampingSteps, double epsilon, FdmSchemeDesc schemeDesc) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_6(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends), tGrid, xGrid, dampingSteps, epsilon, FdmSchemeDesc.getCPtr(schemeDesc)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends, uint tGrid, uint xGrid, uint dampingSteps, double epsilon) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_7(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends), tGrid, xGrid, dampingSteps, epsilon), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends, uint tGrid, uint xGrid, uint dampingSteps) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_8(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends), tGrid, xGrid, dampingSteps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends, uint tGrid, uint xGrid) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_9(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends), tGrid, xGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends, uint tGrid) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_10(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends), tGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdOrnsteinUhlenbeckVanillaEngine(OrnsteinUhlenbeckProcess arg0, YieldTermStructure rTS, DividendSchedule dividends) : this(NQuantLibcPINVOKE.new_FdOrnsteinUhlenbeckVanillaEngine__SWIG_11(OrnsteinUhlenbeckProcess.getCPtr(arg0), YieldTermStructure.getCPtr(rTS), DividendSchedule.getCPtr(dividends)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

}
