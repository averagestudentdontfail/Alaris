//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class CappedFlooredYoYInflationCoupon : YoYInflationCoupon {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal CappedFlooredYoYInflationCoupon(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(CappedFlooredYoYInflationCoupon obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_CappedFlooredYoYInflationCoupon(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, double cap, double floor, Date refPeriodStart, Date refPeriodEnd) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_0(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor, Date.getCPtr(refPeriodStart), Date.getCPtr(refPeriodEnd)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, double cap, double floor, Date refPeriodStart) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_1(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor, Date.getCPtr(refPeriodStart)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, double cap, double floor) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_2(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, double cap) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_3(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, cap), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_4(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_5(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_6(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, double cap, double floor, Date refPeriodStart, Date refPeriodEnd) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_7(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor, Date.getCPtr(refPeriodStart), Date.getCPtr(refPeriodEnd)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, double cap, double floor, Date refPeriodStart) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_8(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor, Date.getCPtr(refPeriodStart)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, double cap, double floor) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_9(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, cap, floor), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, double cap) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_10(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, cap), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_11(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_12(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public CappedFlooredYoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_CappedFlooredYoYInflationCoupon__SWIG_13(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public new double rate() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_rate(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double cap() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_cap(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double floor() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_floor(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double effectiveCap() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_effectiveCap(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double effectiveFloor() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_effectiveFloor(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double underlyingRate() {
    double ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_underlyingRate(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isCapped() {
    bool ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_isCapped(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isFloored() {
    bool ret = NQuantLibcPINVOKE.CappedFlooredYoYInflationCoupon_isFloored(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
