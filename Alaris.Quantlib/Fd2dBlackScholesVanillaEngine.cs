//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class Fd2dBlackScholesVanillaEngine : PricingEngine {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal Fd2dBlackScholesVanillaEngine(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.Fd2dBlackScholesVanillaEngine_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Fd2dBlackScholesVanillaEngine obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_Fd2dBlackScholesVanillaEngine(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid, uint tGrid, uint dampingSteps, FdmSchemeDesc schemeDesc, bool localVol, double illegalLocalVolOverwrite) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_0(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid, tGrid, dampingSteps, FdmSchemeDesc.getCPtr(schemeDesc), localVol, illegalLocalVolOverwrite), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid, uint tGrid, uint dampingSteps, FdmSchemeDesc schemeDesc, bool localVol) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_1(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid, tGrid, dampingSteps, FdmSchemeDesc.getCPtr(schemeDesc), localVol), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid, uint tGrid, uint dampingSteps, FdmSchemeDesc schemeDesc) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_2(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid, tGrid, dampingSteps, FdmSchemeDesc.getCPtr(schemeDesc)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid, uint tGrid, uint dampingSteps) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_3(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid, tGrid, dampingSteps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid, uint tGrid) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_4(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid, tGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid, uint yGrid) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_5(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid, yGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation, uint xGrid) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_6(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation, xGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fd2dBlackScholesVanillaEngine(GeneralizedBlackScholesProcess p1, GeneralizedBlackScholesProcess p2, double correlation) : this(NQuantLibcPINVOKE.new_Fd2dBlackScholesVanillaEngine__SWIG_7(GeneralizedBlackScholesProcess.getCPtr(p1), GeneralizedBlackScholesProcess.getCPtr(p2), correlation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

}
