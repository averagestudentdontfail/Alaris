//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FdSabrVanillaEngine : PricingEngine {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal FdSabrVanillaEngine(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.FdSabrVanillaEngine_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FdSabrVanillaEngine obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_FdSabrVanillaEngine(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid, uint xGrid, uint dampingSteps, double scalingFactor, double eps, FdmSchemeDesc schemeDesc) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_0(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid, xGrid, dampingSteps, scalingFactor, eps, FdmSchemeDesc.getCPtr(schemeDesc)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid, uint xGrid, uint dampingSteps, double scalingFactor, double eps) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_1(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid, xGrid, dampingSteps, scalingFactor, eps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid, uint xGrid, uint dampingSteps, double scalingFactor) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_2(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid, xGrid, dampingSteps, scalingFactor), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid, uint xGrid, uint dampingSteps) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_3(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid, xGrid, dampingSteps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid, uint xGrid) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_4(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid, xGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid, uint fGrid) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_5(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid, fGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS, uint tGrid) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_6(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS), tGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FdSabrVanillaEngine(double f0, double alpha, double beta, double nu, double rho, YieldTermStructureHandle rTS) : this(NQuantLibcPINVOKE.new_FdSabrVanillaEngine__SWIG_7(f0, alpha, beta, nu, rho, YieldTermStructureHandle.getCPtr(rTS)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

}
