//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class FixedLocalVolSurface : LocalVolTermStructure {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal FixedLocalVolSurface(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.FixedLocalVolSurface_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(FixedLocalVolSurface obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_FixedLocalVolSurface(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public FixedLocalVolSurface(Date referenceDate, DateVector dates, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation, FixedLocalVolSurface.Extrapolation upperExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_0(Date.getCPtr(referenceDate), DateVector.getCPtr(dates), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation, (int)upperExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DateVector dates, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_1(Date.getCPtr(referenceDate), DateVector.getCPtr(dates), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DateVector dates, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_2(Date.getCPtr(referenceDate), DateVector.getCPtr(dates), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation, FixedLocalVolSurface.Extrapolation upperExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_3(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation, (int)upperExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_4(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVector strikes, Matrix localVolMatrix, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_5(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVectorVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation, FixedLocalVolSurface.Extrapolation upperExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_6(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVectorVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation, (int)upperExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVectorVector strikes, Matrix localVolMatrix, DayCounter dayCounter, FixedLocalVolSurface.Extrapolation lowerExtrapolation) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_7(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVectorVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter), (int)lowerExtrapolation), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public FixedLocalVolSurface(Date referenceDate, DoubleVector times, DoubleVectorVector strikes, Matrix localVolMatrix, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_FixedLocalVolSurface__SWIG_8(Date.getCPtr(referenceDate), DoubleVector.getCPtr(times), DoubleVectorVector.getCPtr(strikes), Matrix.getCPtr(localVolMatrix), DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setInterpolation(string interpolator) {
    NQuantLibcPINVOKE.FixedLocalVolSurface_setInterpolation__SWIG_0(swigCPtr, interpolator);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setInterpolation() {
    NQuantLibcPINVOKE.FixedLocalVolSurface_setInterpolation__SWIG_1(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public enum Extrapolation {
    ConstantExtrapolation,
    InterpolatorDefaultExtrapolation
  }

}
