//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class LocalVolRNDCalculator : RiskNeutralDensityCalculator {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal LocalVolRNDCalculator(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.LocalVolRNDCalculator_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(LocalVolRNDCalculator obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_LocalVolRNDCalculator(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid, uint tGrid, double x0Density, double localVolProbEps, uint maxIter, double gaussianStepSize) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_0(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid, tGrid, x0Density, localVolProbEps, maxIter, gaussianStepSize), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid, uint tGrid, double x0Density, double localVolProbEps, uint maxIter) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_1(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid, tGrid, x0Density, localVolProbEps, maxIter), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid, uint tGrid, double x0Density, double localVolProbEps) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_2(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid, tGrid, x0Density, localVolProbEps), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid, uint tGrid, double x0Density) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_3(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid, tGrid, x0Density), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid, uint tGrid) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_4(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid, tGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol, uint xGrid) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_5(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol), xGrid), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public LocalVolRNDCalculator(Quote spot, YieldTermStructure rTS, YieldTermStructure qTS, LocalVolTermStructure localVol) : this(NQuantLibcPINVOKE.new_LocalVolRNDCalculator__SWIG_6(Quote.getCPtr(spot), YieldTermStructure.getCPtr(rTS), YieldTermStructure.getCPtr(qTS), LocalVolTermStructure.getCPtr(localVol)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public Fdm1dMesher mesher(double t) {
    global::System.IntPtr cPtr = NQuantLibcPINVOKE.LocalVolRNDCalculator_mesher(swigCPtr, t);
    Fdm1dMesher ret = (cPtr == global::System.IntPtr.Zero) ? null : new Fdm1dMesher(cPtr, true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UnsignedIntVector rescaleTimeSteps() {
    UnsignedIntVector ret = new UnsignedIntVector(NQuantLibcPINVOKE.LocalVolRNDCalculator_rescaleTimeSteps(swigCPtr), true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
