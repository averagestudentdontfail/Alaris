//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.2.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class YoYInflationCoupon : InflationCoupon {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal YoYInflationCoupon(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NQuantLibcPINVOKE.YoYInflationCoupon_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(YoYInflationCoupon obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          NQuantLibcPINVOKE.delete_YoYInflationCoupon(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, Date refPeriodStart, Date refPeriodEnd) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_0(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, Date.getCPtr(refPeriodStart), Date.getCPtr(refPeriodEnd)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread, Date refPeriodStart) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_1(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread, Date.getCPtr(refPeriodStart)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing, double spread) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_2(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing, spread), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter, double gearing) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_3(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter), gearing), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, CPI.InterpolationType interpolation, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_4(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), (int)interpolation, DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, Date refPeriodStart, Date refPeriodEnd) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_5(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, Date.getCPtr(refPeriodStart), Date.getCPtr(refPeriodEnd)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread, Date refPeriodStart) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_6(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread, Date.getCPtr(refPeriodStart)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing, double spread) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_7(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing, spread), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter, double gearing) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_8(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter), gearing), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public YoYInflationCoupon(Date paymentDate, double nominal, Date startDate, Date endDate, uint fixingDays, YoYInflationIndex index, Period observationLag, DayCounter dayCounter) : this(NQuantLibcPINVOKE.new_YoYInflationCoupon__SWIG_9(Date.getCPtr(paymentDate), nominal, Date.getCPtr(startDate), Date.getCPtr(endDate), fixingDays, YoYInflationIndex.getCPtr(index), Period.getCPtr(observationLag), DayCounter.getCPtr(dayCounter)), true) {
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
  }

  public double gearing() {
    double ret = NQuantLibcPINVOKE.YoYInflationCoupon_gearing(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double spread() {
    double ret = NQuantLibcPINVOKE.YoYInflationCoupon_spread(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double adjustedFixing() {
    double ret = NQuantLibcPINVOKE.YoYInflationCoupon_adjustedFixing(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public YoYInflationIndex yoyIndex() {
    global::System.IntPtr cPtr = NQuantLibcPINVOKE.YoYInflationCoupon_yoyIndex(swigCPtr);
    YoYInflationIndex ret = (cPtr == global::System.IntPtr.Zero) ? null : new YoYInflationIndex(cPtr, true);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CPI.InterpolationType interpolation() {
    CPI.InterpolationType ret = (CPI.InterpolationType)NQuantLibcPINVOKE.YoYInflationCoupon_interpolation(swigCPtr);
    if (NQuantLibcPINVOKE.SWIGPendingException.Pending) throw NQuantLibcPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
