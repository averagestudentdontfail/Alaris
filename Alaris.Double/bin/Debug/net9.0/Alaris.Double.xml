<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alaris.Double</name>
    </assembly>
    <members>
        <member name="T:Alaris.Double.DoubleBoundaryApproximation">
            <summary>
            Computes initial boundary estimates for the double boundary case using
            an adapted QD+ algorithm from Li (2010) as modified by Healy (2021).
            
            The two boundaries are computed independently using different roots of the
            characteristic equation (lambda1 for upper, lambda2 for lower).
            
            Reference: Healy Section 4.1
            </summary>
        </member>
        <member name="M:Alaris.Double.DoubleBoundaryApproximation.ComputeInitialBoundaries(System.Int32)">
            <summary>
            Computes initial approximations for both boundaries.
            </summary>
            <param name="m">Number of time points</param>
            <returns>Boundary result with upper/lower boundaries and crossing time</returns>
        </member>
        <member name="T:Alaris.Double.BoundaryResult">
            <summary>
            Result container for boundary computation.
            </summary>
        </member>
        <member name="T:Alaris.Double.DoubleBoundaryEngine">
            <summary>
            Wrapper for American option pricing that automatically handles double boundaries
            under negative rates. Does NOT inherit from PricingEngine - use as a factory.
            </summary>
        </member>
        <member name="M:Alaris.Double.DoubleBoundaryEngine.CreateEngine">
            <summary>
            Creates the appropriate pricing engine based on market regime.
            </summary>
        </member>
        <member name="M:Alaris.Double.DoubleBoundaryEngine.PriceOption(VanillaOption)">
            <summary>
            Prices an American option, automatically handling double boundaries.
            </summary>
        </member>
        <member name="T:Alaris.Double.OptionResult">
            <summary>
            Result container for option pricing.
            </summary>
        </member>
        <member name="T:Alaris.Double.DoubleBoundarySolver">
            <summary>
            Solves the double boundary integral equation using the FP-B' fixed-point iteration.
            
            The key innovation (Healy Equation 33-35) is that the lower boundary calculation
            uses the UPDATED upper boundary, providing stability that the standard FP-B lacks.
            
            Reference: Healy Section 5.3
            </summary>
        </member>
        <member name="M:Alaris.Double.DoubleBoundarySolver.Solve(System.Double[],System.Double[],System.Double)">
            <summary>
            Solves for refined boundaries using FP-B' iteration.
            </summary>
            <param name="initialUpper">Initial upper boundary estimate</param>
            <param name="initialLower">Initial lower boundary estimate</param>
            <param name="crossingTime">Time when boundaries cross</param>
            <returns>Refined boundary result</returns>
        </member>
    </members>
</doc>
